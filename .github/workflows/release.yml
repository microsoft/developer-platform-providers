name: Release Provider

run-name: Release ${{ inputs.provider}} Provider

on:
  workflow_call:
    inputs:
      provider:
        type: string
        required: true
        description: 'The name of the provider to release.'
      folder:
        type: string
        required: true
        description: 'The path to the provider project folder.'

env:
  IMAGE_REGISTRY: ${{ vars.REGISTRY_URL || 'ghcr.io' }}
  IMAGE_REPOSITORY: ${{ vars.REGISTRY_REPOSITORY || github.repository }}

jobs:
  build:
    name: Create new Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          BUILD_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" && echo "date=$BUILD_DATE" >> $GITHUB_OUTPUT
          IMAGE_VERSION=$(cat ${{ inputs.folder }}/version.txt) && echo "version=$IMAGE_VERSION" >> $GITHUB_OUTPUT
          PROVIDER_NAME=${{ inputs.provider }} && IMAGE_NAME=${PROVIDER_NAME,,} && echo "name=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: ./global.json

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ vars.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Publish ${{ inputs.provider }}
        working-directory: ${{ inputs.folder }}
        run: dotnet publish -o home/site/wwwroot -p:Version="${{ steps.setup.outputs.version }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        env:
          BUILD_DATE: ${{ steps.setup.outputs.date }}
          IMAGE_VERSION: ${{ steps.setup.outputs.version }}
          IMAGE_NAME: 'provider-${{ steps.setup.outputs.name }}'
        with:
          # only build and push if this is not a pull request
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ inputs.folder }}/Dockerfile
          context: ${{ inputs.folder }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
